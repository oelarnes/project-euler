# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
# terms would be:
# 
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# 
# Let us list the factors of the first seven triangle numbers:
# 
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# 
# What is the value of the first triangle number to have over five hundred divisors?

# Solution: We first note that a triangular number has the form n*(n+1)/2. We will use
# prime factorization for each n, then concatenate the prime factorization of consecutive
# numbers excluding a two, obtaining a multi-set, implemented as a dict:

# S = { (p_j, n_j) } for j>0. The number of unique factors is the the number of
# multisets less than S in the obvious partial ordering. This is simply the product of
# the (n_j+1) since we can choose from 0 to n_j.

# Example: n = 24. S = {(2,3), (3, 1)}. n has (3 + 1)(1 +1) = 8 factors, 
# 1, 2, 3, 4, 6, 8, 12, 24

from pe_functions import factor
from operator import mul

n = 5
p_n_plus = factor(n+1)
facts = 4
s = {}

while facts <= 500:
	n = n + 1
	p_n = p_n_plus[:]
	p_n_plus = factor(n + 1)
	for el in p_n + p_n_plus:
		if el in s:
			s[el] += 1
		else:
			s[el] = 1
	s[2] -= 1
	facts = reduce(mul, [s[el]+1 for el in s], 1)
	s = {}
	
# print n, facts, p_n, p_n_plus
print n*(n+1)/2

# 12375 576 [3, 3, 5, 5, 5, 11] [2, 2, 2, 7, 13, 17]
# 76576500
